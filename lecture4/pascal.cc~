#include <cmath>
#include <iostream>
#include <vector>
using std::cout;
using std::endl;
using std::cin;
using std::vector;

  
int main (){ 

  class pascal {
  private: 
    int rows, cols;
    vector<vector<double>> elements;
  public: 
    pascal(int n) {
      rows = n; cols = n;
      elements =
	vector<vector<double>>(n,vector<double>(n));
    }
    void set(int rows, int modulus){
      for (int i =0; i<rows; i++)
	{
	  long x = 1;
	  for(int j =1; j<(rows-i); j++)
	    {
	      elements.at(i).at(j) = 0;
	      cout << "  ";
	    }
	  for (int k = 0; k<=i; k++)
	    {
	      double mod = x%modulus;
	      if (mod == 0)
	       cout << " ";
	      else cout << "  " << "*" ;
	      x = x*(i-k)/(k+1);
	      elements.at(i).at(k)=x;
	    }
	  cout << endl << endl;
	}
    };
    double get(int i, int j){
      return elements.at(i).at(j);
    };
  };

  cout <<  "How many rows do you want?" << endl;
  int how_many;
  cin >> how_many;
  cout << "What is your modulus?" << endl;
  int modulus;
  cin >> modulus; 

 pascal test = pascal(how_many);
 test.set(how_many,modulus);

  return 0;
}

// C-x C-s
// then exit:
// C-x C-c
// if you're stuck 
// C-g
// C-k : kill meaning successive line delete
// C-y : yank back
// C-v : next screen
// Esc-v: previous screen
// C-l : reposition current line
// Esc > : end of file
// Esc < : beginning of file
